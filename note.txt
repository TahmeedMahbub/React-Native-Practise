LIFE CYCLE (3)
================
1. Mounting
2. Update
3. Unmounting

Functional Component Cons
==============================
1. states, life cycle method, context api cannot be usable

Hooks
===================
1. new feature in react 16.8
2. remove limitations in Functional Component
3. only used in functional component, not in class component
4. let us use state and other react features without writing class
5. in whole life cycle, only one hook named "useEffect"

useEffect (Only hook used in whole life cycle)
============================
1. every mount/updating time, useEffect will be called
2. send empty array inside useEffect as last parameter, will not be called after mounting


unmount: Remove from UI 
===================

Touchable Highlight: alternative of button
__________________________
1. Default Button has limitations in designing


WebView: Install Package
=============================
>> npm install package
>> npx react-native run-android

Navigation: 3 types (reactnavigation.org)
==========================
1. stack
2. drawer
3. tab


1 . Stack Navigation
==============================
>> npm install react-native-screens react-native-safe-area-context
>> npm install @react-navigation/native
>> npx react-native run-android